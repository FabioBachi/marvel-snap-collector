generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Cards {
  id       Int        @id @default(autoincrement())
  name     String     @db.VarChar(255)
  cost     Int        @db.SmallInt
  power    Int        @db.SmallInt
  ability  String?
  flavor   String?
  art      String     @db.VarChar(255)
  slug     String     @db.VarChar(255)

  userCards UsersCards[]
  variants Variants[]

  @@unique([name])
}

model Variants {
  id       Int    @id @default(autoincrement())
  art      String @db.VarChar(255)
  sketcher String @db.VarChar(255)
  colorist String @db.VarChar(255)
  cardId   Int

  card    Cards  @relation(fields: [cardId], references: [id])
}

model UsersCards {
  cardId       Int
  userId       String

  card         Cards  @relation(fields: [cardId], references: [id])
  user         User  @relation(fields: [userId], references: [id])

  @@id([cardId, userId])

}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?

  accounts      Account[]
  sessions      Session[]
  userCards UsersCards[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
